const languages={"en-US":{"language.LanguageName":"English","ui.title":"Table Tennis Counter","ui.theme.themeName.auto":"auto","ui.theme.themeName.light":"light","ui.theme.themeName.dark":"dark","ui.topbar.language":"Languages","ui.topbar.theme":"Theme","ui.topbar.more":"More","ui.topbar.reload":"Reload","ui.topbar.github":"GitHub","ui.setup.winningBalls":"Set Winning Balls","ui.setup.playerName":"Player Name","ui.setup.addPlayer":"Add Player","ui.setup.serveRule":"Serve Rule","ui.setup.serveRule.none":"None","ui.setup.serveRule.inTurn":"In Turn","ui.setup.rotationalServes":"Rotational Serves Number","ui.setup.playerListHint":"Players:","ui.setup.startGame":"Start Game","ui.gameBoard.tab.score":"Score","ui.gameBoard.tab.history":"History","ui.gameBoard.tab.info":"Info","ui.gameBoard.playerScores":"Player Scores","ui.gameBoard.matchHistory":"Match History","ui.gameBoard.currentMatch":"Current Match","ui.gameBoard.matchOrder":"Match Order","ui.gameBoard.serve":"Serve","ui.gameBoard.score":"Score","ui.gameBoard.matchPoint":"{0} is at match point!","ui.gameBoard.winMessage":"{0} Wins this round!","ui.gameBoard.matchHistory.item":"{0} vs {1}: {2} won","ui.gameBoard.matchOrder.item":"{0} vs {1}","ui.gameBoard.undo":"Undo","ui.tooltip.themeSetTo":"Theme set to {0}","ui.tooltip.playerNameError":"Please enter a unique valid player name","ui.tooltip.playerAmountError":"Please add at least two players","ui.tooltip.winningBallsError":"Please enter a valid number of winning balls","ui.tooltip.serveRuleError":"Please choose a valid serve rule","ui.tooltip.rotationalServesError":"Please enter a valid number of rotational serves number","ui.tooltip.repoTip":"Issues and PRs are welcome!!!","ui.tooltip.noScoreToUndo":"No score to undo"},"zh-CN":{"language.LanguageName":"简体中文","ui.title":"乒乓球计数器","ui.theme.themeName.auto":"自动","ui.theme.themeName.light":"亮色","ui.theme.themeName.dark":"暗色","ui.topbar.language":"语言","ui.topbar.theme":"主题","ui.topbar.more":"更多","ui.topbar.reload":"重载","ui.topbar.github":"GitHub","ui.setup.winningBalls":"设置制胜球数","ui.setup.playerName":"玩家名","ui.setup.addPlayer":"添加玩家","ui.setup.serveRule":"发球规则","ui.setup.serveRule.none":"无","ui.setup.serveRule.inTurn":"轮流","ui.setup.rotationalServes":"轮换发球数","ui.setup.playerListHint":"玩家:","ui.setup.startGame":"开始比赛","ui.gameBoard.tab.score":"计分","ui.gameBoard.tab.history":"历史","ui.gameBoard.tab.info":"信息","ui.gameBoard.playerScores":"玩家分数","ui.gameBoard.matchHistory":"比赛历史","ui.gameBoard.currentMatch":"当前比赛","ui.gameBoard.matchOrder":"比赛顺序","ui.gameBoard.serve":"发球","ui.gameBoard.score":"得分","ui.gameBoard.matchPoint":"{0} 处于赛点！","ui.gameBoard.winMessage":"{0} 本轮获胜！","ui.gameBoard.matchHistory.item":"{0} vs {1}: {2} 获胜","ui.gameBoard.matchOrder.item":"{0} vs {1}","ui.gameBoard.undo":"撤销","ui.tooltip.themeSetTo":"主题已设为 {0}","ui.tooltip.playerNameError":"请填入唯一且有效的玩家名","ui.tooltip.playerAmountError":"请添加至少两个玩家","ui.tooltip.winningBallsError":"请填入有效的制胜球数","ui.tooltip.serveRuleError":"请选择一个有效的发球规则","ui.tooltip.rotationalServesError":"请填入有效的轮换发球数","ui.tooltip.repoTip":"欢迎 Issue 和 PR！！！","ui.tooltip.noScoreToUndo":"没有可撤销的分数"},"zh-TW":{"language.LanguageName":"繁體中文","ui.title":"乒乓球計數器","ui.theme.themeName.auto":"自動","ui.theme.themeName.light":"亮色","ui.theme.themeName.dark":"暗色","ui.topbar.language":"語言","ui.topbar.theme":"主題","ui.topbar.more":"更多","ui.topbar.reload":"重新載入","ui.topbar.github":"GitHub","ui.setup.winningBalls":"設定勝球數","ui.setup.playerName":"玩家名稱","ui.setup.addPlayer":"新增玩家","ui.setup.serveRule":"發球規則","ui.setup.serveRule.none":"無","ui.setup.serveRule.inTurn":"輪流","ui.setup.rotationalServes":"輪換發球數","ui.setup.playerListHint":"玩家:","ui.setup.startGame":"開始比賽","ui.gameBoard.tab.score":"計分","ui.gameBoard.tab.history":"歷史","ui.gameBoard.tab.info":"資訊","ui.gameBoard.playerScores":"玩家得分","ui.gameBoard.matchHistory":"比賽歷史","ui.gameBoard.currentMatch":"當前比賽","ui.gameBoard.matchOrder":"比賽順序","ui.gameBoard.serve":"發球","ui.gameBoard.score":"得分","ui.gameBoard.matchPoint":"{0} 處於賽點!","ui.gameBoard.winMessage":"{0} 贏得了這一局！","ui.gameBoard.matchHistory.item":"{0} 對 {1}: {2} 獲勝","ui.gameBoard.matchOrder.item":"{0} 對 {1}","ui.gameBoard.undo":"撤銷","ui.tooltip.themeSetTo":"主題已設定為 {0}","ui.tooltip.playerNameError":"請輸入唯一且有效的玩家名稱","ui.tooltip.playerAmountError":"請至少添加兩個玩家","ui.tooltip.winningBallsError":"請輸入有效的勝球數","ui.tooltip.serveRuleError":"請選擇一個有效的發球規則","ui.tooltip.rotationalServesError":"請輸入有效的輪換發球數","ui.tooltip.repoTip":"歡迎提交 Issue 和 PR！！！","ui.tooltip.noScoreToUndo":"沒有可撤銷的分數"},"ja-JP":{"language.LanguageName":"日本語","ui.title":"卓球カウンター","ui.theme.themeName.auto":"自動","ui.theme.themeName.light":"ライト","ui.theme.themeName.dark":"ダーク","ui.topbar.language":"言語","ui.topbar.theme":"テーマ","ui.topbar.more":"その他","ui.topbar.reload":"再読み込み","ui.topbar.github":"GitHub","ui.setup.winningBalls":"勝利点数を設定","ui.setup.playerName":"プレイヤー名","ui.setup.addPlayer":"プレイヤーを追加","ui.setup.serveRule":"サーブルール","ui.setup.serveRule.none":"なし","ui.setup.serveRule.inTurn":"順番","ui.setup.rotationalServes":"サーブ交代数","ui.setup.playerListHint":"プレイヤー:","ui.setup.startGame":"ゲーム開始","ui.gameBoard.tab.score":"スコア","ui.gameBoard.tab.history":"履歴","ui.gameBoard.tab.info":"情報","ui.gameBoard.playerScores":"プレイヤースコア","ui.gameBoard.matchHistory":"試合履歴","ui.gameBoard.currentMatch":"現在の試合","ui.gameBoard.matchOrder":"試合順序","ui.gameBoard.serve":"サーブ","ui.gameBoard.score":"得点","ui.gameBoard.matchPoint":"{0} がマッチポイントです!","ui.gameBoard.winMessage":"{0} がこのラウンドに勝利しました！","ui.gameBoard.matchHistory.item":"{0} 対 {1}: {2} が勝利","ui.gameBoard.matchOrder.item":"{0} 対 {1}","ui.gameBoard.undo":"アンドゥ","ui.tooltip.themeSetTo":"テーマが {0} に設定されました","ui.tooltip.playerNameError":"ユニークで有効なプレイヤー名を入力してください","ui.tooltip.playerAmountError":"少なくとも2人のプレイヤーを追加してください","ui.tooltip.winningBallsError":"有効な勝利点数を入力してください","ui.tooltip.serveRuleError":"有効なサーブルールを選択してください","ui.tooltip.rotationalServesError":"有効なサーブ交代数を入力してください","ui.tooltip.repoTip":"IssueやPRをお待ちしています！！！","ui.tooltip.noScoreToUndo":"取り消すスコアはありません"},"el-GR":{"language.LanguageName":"Ελληνικά","ui.title":"Μετρητής Σκορ Πινγκ-Πονγκ","ui.theme.themeName.auto":"Αυτόματο","ui.theme.themeName.light":"Φωτεινό","ui.theme.themeName.dark":"Σκοτεινό","ui.topbar.language":"Γλώσσες","ui.topbar.theme":"Θεμα","ui.topbar.more":"Άλλο","ui.topbar.reload":"Επαναφόρτωση","ui.topbar.github":"GitHub","ui.setup.winningBalls":"Σετ Κερδισμένων μπαλών","ui.setup.playerName":"Όνομα παίκτη","ui.setup.addPlayer":"Πρόσθεσε παίκτη","ui.setup.serveRule":"Serve Κανόνας","ui.setup.serveRule.none":"Κανένα","ui.setup.serveRule.inTurn":"Με σειρά","ui.setup.rotationalServes":"Αριθμός περιστροφικών σερβίς","ui.setup.playerListHint":"Παίκτες:","ui.setup.startGame":"Εκκίνηση","ui.gameBoard.tab.score":"Σκορ","ui.gameBoard.tab.history":"Ιστορικό","ui.gameBoard.tab.info":"Πληροφορίες","ui.gameBoard.playerScores":"Σκορ Παίκτη","ui.gameBoard.matchHistory":"Ιστορικό Match","ui.gameBoard.currentMatch":"Τρέχων Match","ui.gameBoard.matchOrder":"Σειρά Match","ui.gameBoard.serve":"Σερβίς","ui.gameBoard.score":"Σκορ","ui.gameBoard.matchPoint":"{0} βρίσκεται σε match point!","ui.gameBoard.winMessage":"{0} Κέρδισε αυτόν τον γύρο!","ui.gameBoard.matchHistory.item":"{0} vs {1}: {2} κέρδισε","ui.gameBoard.matchOrder.item":"{0} vs {1}","ui.gameBoard.undo":"ξεκάνω","ui.tooltip.themeSetTo":"Το θέμα τέθηκε στον/στην {0}","ui.tooltip.playerNameError":"Παρακαλώ εισάγετε ένα μοναδικό έγκυρο όνομα παίκτη","ui.tooltip.playerAmountError":"Παρακαλώ εισάγετε τουλάχιστον δύο παίκτες","ui.tooltip.winningBallsError":"Παρακαλω εισάγετε έναν έγκυρο αριθμό κερδισμένων μπαλων ","ui.tooltip.serveRuleError":"Παρακαλώ να επιλέξετε έναν έγκυρο κανόνα σερβίς","ui.tooltip.rotationalServesError":"Παρακαλώ εισάγετε εναν εγκυρο αριθμό περιστροφικών σερβις","ui.tooltip.repoTip":"Για κάθε πρόβλημα ή PRs επικοινωνήστε μαζί μας!!!","ui.tooltip.noScoreToUndo":"Δεν υπάρχει σκορ για αναίρεση"}};var currentLanguage="en-US";function getLanguageList(){let e=[];for(let t in languages)e.push(t);return e}function lang(e,...t){return langForce(currentLanguage,e,...t)}function langForce(e,t,...a){return"object"==typeof languages[e]&&"string"==typeof languages[e][t]||(e="en-US"),"en-US"===e&&"string"!=typeof languages[e][t]?t:languages[e][t].format(...a)}function setLanguage(e){console.log(`Language set to ${e}`),writeConfig("language",e),e_reloadPage()}function updateElementLanguages(){console.log("Update Element Languages Start"),console.time("Update Element Languages");let e=document.getElementsByTagName("*");for(let t=0;t<e.length;t++){let a=e[t];if(a.dataset?.lang)if(a.dataset.langProp||0===a.childNodes.length||1===a.childNodes.length&&"#text"===a.childNodes[0].nodeName){let e=a.dataset.langProp??"innerText";a[e]=lang(a.dataset.lang),console.debug(`Update Element Languages: key '${a.dataset.lang}' property '${e}' %o`,a)}else for(let e=a.childNodes.length-1;e>=0;e--)if("#text"===a.childNodes[e].nodeName){a.childNodes[e].nodeValue=lang(a.dataset.lang),console.debug(`Update Element Languages: key '${a.dataset.lang}' %o`,a);break}}console.timeEnd("Update Element Languages")}let players=[],totalScores={},currentMatchScores={},currentMatch=[0,1],winBalls=5,serveRule=-1,rotationalServes=1,currentServe=-1,rotationalServesCounter=0,matchHistory=[],lastScoringPlayer=null,lastRotationalServesCounter=0,lastServe=-1;function addWinBalls(){const e=parseInt(document.getElementById("winBalls").value);isNaN(e)?document.getElementById("winBalls").value=1:document.getElementById("winBalls").value=e+1}function minusWinBalls(){const e=parseInt(document.getElementById("winBalls").value);!isNaN(e)&&e>0&&(document.getElementById("winBalls").value=e-1)}function addPlayer(){const e=document.getElementById("playerName").value.trim();""===e||players.includes(e)?showSnackBar(lang("ui.tooltip.playerNameError"),"PlayerNameError"):(players.push(e),totalScores[e]=0,updatePlayerList(),document.getElementById("playerName").value="")}function updatePlayerList(){showLoading();const e=document.getElementById("playerList");e.innerHTML="",players.forEach((t=>{const a=document.createElement("li");a.textContent=t,e.appendChild(a)})),hideLoading()}function startGame(){return showLoading(),players.length<2?(showSnackBar(lang("ui.tooltip.playerAmountError"),"PlayerAmountError"),void hideLoading()):(winBalls=parseInt(document.getElementById("winBalls").value),isNaN(winBalls)||winBalls<=0?(showSnackBar(lang("ui.tooltip.winningBallsError"),"WinningBallsError"),void hideLoading()):(serveRule=parseInt(document.getElementById("serveRule").selectedIndex),rotationalServes=parseInt(document.getElementById("rotationalServes").value),isNaN(serveRule)||serveRule<0||serveRule>1?(showSnackBar(lang("ui.tooltip.serveRuleError"),"ServeRuleError"),void hideLoading()):1===serveRule&&(isNaN(rotationalServes)||rotationalServes<=0)?(showSnackBar(lang("ui.tooltip.rotationalServesError"),"RotationalServesError"),void hideLoading()):(1===serveRule&&(currentServe=0),document.getElementById("setup").style.display="none",document.getElementById("gameBoardWrapper").classList.add("active"),updatePlayerScoreList(),updateMatchOrderList(),startNewMatch(),void hideLoading())))}function startNewMatch(){showLoading(),currentMatchScores={},players.forEach((e=>{currentMatchScores[e]=0})),updateCurrentMatch(),hideLoading()}function checkMatchPoint(e){currentMatchScores[e]===winBalls-1&&(document.getElementById("result").innerText=lang("ui.gameBoard.matchPoint",e),setTimeout((()=>{document.getElementById("result").innerText=""}),1500))}function incrementCurrentMatchScore(e){lastScoringPlayer=e,lastRotationalServesCounter=rotationalServesCounter,lastServe=currentServe,currentMatchScores[e]++,rotationalServesCounter++,1===serveRule&&rotationalServesCounter>=rotationalServes&&(rotationalServesCounter=0,currentServe=0===currentServe?1:0),checkMatchPoint(e),updateCurrentMatch(),currentMatchScores[e]>=winBalls&&(totalScores[e]++,document.getElementById("result").innerText=lang("ui.gameBoard.winMessage",e),matchHistory.push(lang("ui.gameBoard.matchHistory.item",players[currentMatch[0]],players[currentMatch[1]],e)),disableScoreButtons(),setTimeout((()=>{document.getElementById("result").innerText="",updatePlayerScoreList(),updateMatchOrder(),updateMatchOrderList(),updateHistoryList(),enableScoreButtons(),startNewMatch()}),2e3))}function disableScoreButtons(){document.querySelectorAll(".score-button").forEach((e=>{e.disabled=!0}))}function enableScoreButtons(){document.querySelectorAll(".score-button").forEach((e=>{e.disabled=!1}))}function updateCurrentMatch(){const e=document.getElementById("currentMatch"),t=players[currentMatch[0]],a=players[currentMatch[1]];e.innerHTML=`\n        <div class="player">\n            <div class="playerName">${t}</div>\n            <div class="playerTags">\n                <s-chip class="player-serve ${1===serveRule&&0==currentServe?"active":""}" type="filled-tonal">\n                    <s-icon slot="start" type="done"></s-icon>\n                    ${lang("ui.gameBoard.serve")}\n                </s-chip>\n            </div>\n            <div class="playerScore">${currentMatchScores[t]}</div>\n            <s-button type="filled-tonal" class="score-button" onclick="incrementCurrentMatchScore('${t}')">\n                ${lang("ui.gameBoard.score")}\n            </s-button>\n        </div>\n        <div class="player">\n            <div class="playerName">${a}</div>\n            <div class="playerTags">\n                <s-chip class="player-serve ${1===serveRule&&1==currentServe?"active":""}" type="filled-tonal">\n                    <s-icon slot="start" type="done"></s-icon>\n                    ${lang("ui.gameBoard.serve")}\n                </s-chip>\n            </div>\n            <div class="playerScore">${currentMatchScores[a]}</div>\n            <s-button type="filled-tonal" class="score-button" onclick="incrementCurrentMatchScore('${a}')">\n                ${lang("ui.gameBoard.score")}\n            </s-button>\n        </div>\n    `}function updatePlayerScoreList(){const e=document.getElementById("playerScoreList");e.innerHTML="",players.forEach((t=>{const a=document.createElement("li");a.innerHTML=`\n            <div class="playerName">${t}</div>\n            <div class="playerScore">${totalScores[t]}</div>\n        `,e.appendChild(a)}))}function updateMatchOrderList(){const e=document.getElementById("matchOrderList");e.innerHTML="";for(let t=0;t<players.length;t++){const a=players[t],r=players[(t+1)%players.length],o=document.createElement("li");o.textContent=lang("ui.gameBoard.matchOrder.item",a,r),e.appendChild(o)}}function updateHistoryList(){const e=document.getElementById("historyList");e.innerHTML="",matchHistory.forEach(((t,a)=>{const r=document.createElement("li"),o=t.split(" vs "),n=o[0].trim(),i=o[1].split(":")[0].trim(),u=`${totalScores[n]}:${totalScores[i]}`;r.textContent=`${t}, ${u}`,e.appendChild(r)}))}function updateMatchOrder(){currentMatch[0]=(currentMatch[0]+1)%players.length,currentMatch[1]=(currentMatch[1]+1)%players.length,currentMatch[0]===currentMatch[1]&&(currentMatch[1]=(currentMatch[1]+1)%players.length)}function resetScores(){players=[],totalScores={},currentMatchScores={},currentMatch=[0,1],matchHistory=[],document.getElementById("playerList").innerHTML="",document.getElementById("gameBoardWrapper").style.display="none",document.getElementById("initialSetup").style.display="block",document.getElementById("playerInputGroup").style.display="block",document.getElementById("playerListGroup").style.display="block",document.getElementById("initialButtons").style.display="block",document.getElementById("historyList").innerHTML=""}function undoLastScore(){lastScoringPlayer?(currentMatchScores[lastScoringPlayer]--,rotationalServesCounter=lastRotationalServesCounter,currentServe=lastServe,lastScoringPlayer=null,updateCurrentMatch()):showSnackBar(lang("ui.tooltip.noScoreToUndo"),"NoScoreToUndo")}function showSnackBar(e,t="snackbar"){let a=document.getElementById("snackbar-"+t);null===a&&(a=document.createElement("s-snackbar"),a.id="snackbar-"+t,document.getElementById("tooltips").appendChild(a)),a.innerText=e,a.show()}function showLoading(){document.getElementById("top-loading").style.visibility="visible"}function hideLoading(){document.getElementById("top-loading").style.visibility="hidden"}function e_toggleTheme(e){let t=document.getElementById("page"),a=document.getElementById("theme-icon");if(!e)switch(t.theme){case"auto":default:e="light";break;case"light":e="dark";break;case"dark":e="auto"}switch(e){case"auto":t.theme="auto",a.type="",a.innerHTML='\n<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 -960 960 960">\n    <path d="M312-320h64l32-92h146l32 92h62L512-680h-64L312-320Zm114-144 52-150h4l52 150H426Zm54 \n    436L346-160H160v-186L28-480l132-134v-186h186l134-132 134 132h186v186l132 134-132 \n    134v186H614L480-28Zm0-112 100-100h140v-140l100-100-100-100v-140H580L480-820 \n    380-720H240v140L140-480l100 100v140h140l100 100Zm0-340Z"></path>\n</svg>';break;case"light":t.theme="light",a.type="light_mode",a.innerHTML="";break;case"dark":t.theme="dark",a.type="dark_mode",a.innerHTML=""}writeConfig("theme",e),showSnackBar(lang("ui.tooltip.themeSetTo",lang(`ui.theme.themeName.${e}`)),"Theme")}function e_reloadPage(){showLoading(),window.location.reload()}function e_gotoGitHub(){showSnackBar(lang("ui.tooltip.repoTip"),"RepoTips"),window.open("https://github.com/Minemetero/Table-Tennis-Counter","_blank")}function e_boardSelectChange(){let e=document.getElementById("gameBoardSelector").selectedIndex,t=document.querySelectorAll("#gameBoard>div");t.forEach((function(e){e.classList.remove("active")})),e>=0&&e<t.length&&t[e].classList.add("active")}function readConfig(e,t=null){try{let a=localStorage.getItem("Table-Tennis-Counter");if("string"==typeof a&&null!==a){let r=JSON.parse(a);return"object"==typeof r&&void 0!==r[e]&&null!==r[e]?r[e]:t}return t}catch(e){return t}}function writeConfig(e,t){let a=localStorage.getItem("Table-Tennis-Counter"),r={};if("string"==typeof a&&null!==r)try{r=JSON.parse(a),"object"==typeof r&&null!==r||(r={})}catch(e){r={}}else r={};r[e]=t,localStorage.setItem("Table-Tennis-Counter",JSON.stringify(r))}window.incrementCurrentMatchScore=incrementCurrentMatchScore,console.log({matchHistory:matchHistory}),console.log({totalScores:totalScores}),document.addEventListener("DOMContentLoaded",(()=>{console.info("Hello World!"),console.log("\n░▀█▀░█▀█░█▀▄░█░░░█▀▀        \n░░█░░█▀█░█▀▄░█░░░█▀▀        \n░░▀░░▀░▀░▀▀░░▀▀▀░▀▀▀        \n░▀█▀░█▀▀░█▀█░█▀█░▀█▀░█▀▀    \n░░█░░█▀▀░█░█░█░█░░█░░▀▀█    \n░░▀░░▀▀▀░▀░▀░▀░▀░▀▀▀░▀▀▀    \n░█▀▀░█▀█░█░█░█▀█░▀█▀░█▀▀░█▀▄\n░█░░░█░█░█░█░█░█░░█░░█▀▀░█▀▄\n░▀▀▀░▀▀▀░▀▀▀░▀░▀░░▀░░▀▀▀░▀░▀\n\n欢迎使用！\nrepo: https://github.com/Minemetero/Table-Tennis-Counter\n以 Apache-2.0 协议开源\n\n欢迎Issue！\n    "),setTimeout((function(){document.getElementById("main").style.visibility="visible",document.getElementById("top-bar").style.visibility="visible",hideLoading()}),500),currentLanguage=readConfig("language","en-US"),document.documentElement.lang=currentLanguage,e_toggleTheme(readConfig("theme","auto"));let e=getLanguageList(),t=document.getElementById("language-menu");e.forEach((function(e){t.innerHTML+=`\n<s-popup-menu-item onclick="setLanguage('${e}')">\n    ${langForce(e,"language.LanguageName")}\n</s-popup-menu-item>`})),updateElementLanguages(),document.querySelectorAll("#serveRule>s-picker-item").forEach((function(e,t){e.onclick=function(){document.getElementById("rotationalServesGroup").hidden=1!==t}}))})),String.prototype.format||(String.prototype.format=function(){var e=arguments;return this.replace(/{(\d+)}/g,(function(t,a){return void 0!==e[a]?e[a]:t}))});